version: '3.8'

services:
  printify-automation:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7860:7860"
    volumes:
      # Mount config file (create this file before running)
      - ./config.json:/app/config.json:ro
      # Mount data directories for persistence
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    environment:
      - PYTHONPATH=/app
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
      # Optional: Set log level
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - printify-network

  # Optional: Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # For SSL certificates (if using HTTPS)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - printify-automation
    restart: unless-stopped
    networks:
      - printify-network
    profiles:
      - production

networks:
  printify-network:
    driver: bridge

# Example usage:
#
# Development (just the app):
#   docker-compose up -d printify-automation
#
# Production (with nginx):
#   docker-compose --profile production up -d
#
# Build and run:
#   docker-compose up --build
#
# View logs:
#   docker-compose logs -f printify-automation